@startuml
hide circle
skinparam classAttributeIconSize 0

'Clases
Class Opciones{
    -opciones: Collection<String>
    +agregarOpcion(opcion: String): void
    +compararConOrden(opciones: Opciones): boolean
    +compararSinOrden(opciones: Opciones): boolean
}

Abstract Class Pregunta{
    -enunciado: String
    +{abstract}{static}Pregunta(enunciado: String)
    +asignarOpcionCorrecta(opcionCorrecta: String): void
    +esCorrecta(Opcion: String): boolean
    +calificar(Respuestaes: List<Respuesta>): void
}

Class Respuesta{
    -opcionesElegidas: Opciones
    +{static}Respuesta(jugador: Jugador)
    +agregarOpcion(opcion: String): void
}

Class Jugador{
    -nombre: String
    +{Static}Jugador(nombre: String)
    +modificarPuntaje(puntaje: puntaje): void
    +obtenerPuntaje(): int
}

Abstract Class Puntaje{
    +{abstract}añadir(puntaje: Puntaje): void
    +{abstract}valor(puntaje: Puntaje): int
}

Class Puntos{
    +añadir(puntaje: Puntaje): void
    +valor(): int
}

Class PuntoNulo{
    +añadir(puntaje: Puntaje): void
    +valor(): int
}

Class PuntoNegativo{
    +añadir(puntaje: Puntaje): void
    +valor(): int
}

Class PuntoPositivo{
    +añadir(puntaje: Puntaje): void
    +valor(): int
}

Interface Corrector{
    +{abstract}sonCorrectas(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): boolean
}

Class CorrectorConOrden{
    +sonCorrectas(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): boolean
}

Class CorrectorSinOrden{
    +sonCorrectas(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): boolean
}

Class CorrectorParcial{
    +sonCorrectas(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): boolean
}

Abstract Class CorrectorDecorator{
    +{Static}CorrectorDecorator(corrector: Corrector)
    +sonCorrectas(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): boolean
    +{abstract}calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Class ClasicoDecorator{
    +{Static}ClasicoDecorator(corrector: Corrector)
    +calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Class PenalizadoDecorator{
    +{Static}ClasicoDecorator(corrector: Corrector)
    +calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Class ParcialDecorator{
    +{Static}ClasicoDecorator(corrector: Corrector)
    +calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Abstract Class Ronda{
    +calificar(jugador: Jugador, pregunta: Pregunta): void
}

'Relaciones
Respuesta o-- Jugador
Pregunta *-left- Opciones
Respuesta *-up- Opciones
PuntoNegativo -up-|> Puntaje
PuntoNulo -up-|> Puntaje
PuntoPositivo -up-|> Puntaje
Puntos -left-|> Puntaje
Puntos "1" o-left- "*" Puntaje
Jugador *-- Puntaje
Pregunta o-right- CorrectorDecorator
CorrectorDecorator -right-|> Corrector
CorrectorDecorator o-right- Corrector
CorrectorSinOrden -up-|> Corrector
CorrectorConOrden -up-|> Corrector
CorrectorParcial -up-|> Corrector
ClasicoDecorator -down-|> CorrectorDecorator
PenalizadoDecorator --|> CorrectorDecorator
ParcialDecorator --|> CorrectorDecorator
Ronda .left.> Jugador
Ronda .left.> Pregunta

@enduml