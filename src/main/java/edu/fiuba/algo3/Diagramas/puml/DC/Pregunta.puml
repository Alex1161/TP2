@startuml
hide circle
skinparam classAttributeIconSize 0

class CreadorDePreguntas{
    +crearPregunta(nombreTipoDePregunta : String, enunciado: String, correctas: Opciones, posibles: Opciones): Pregunta
}

class LectorDePreguntas{
    +recuperarPreguntas(src_Preguntas : String) : List<Pregunta>
    +recuperarPregunta(src_Preguntas : String) : Pregunta
}

Abstract Class Pregunta{
    -enunciado: String
    -tipo: String
    -calificador: Calificador
    -comodines: List<Comodin>
    +calificar(Respuestas: List<Respuesta>): void
    +agregarComodin(comodin: Comodin, respuesta: Respuesta): void
    +calificar(respuestas: List<Respuesta>): void
    +sonCorrectas(opciones: Opciones): boolean
}

Class Opciones{
    -opciones: Collection<String>
    +compararConOrden(opciones: Opciones): boolean
    +compararSinOrden(opciones: Opciones): boolean
    +esta(opcion: String): boolean
}

Class Respuesta{
    -jugador: Jugador
    -comodin: Comodin
    -puntaje: Puntaje
    +aplicarPuntaje(): void
    +vs(Respuesta respuesta): void
    +aplicarComodin(Comodin comodin): void
}

Abstract Class Penalidad{
    +validar(comodin: Comodin): void
    +{abstract}validarExclusividad(): void
    +{abstract}validarMultiplicador(): void
}

Class ConPenalidad{
    +validarExclusividad(): void
    +validarMultiplicador(): void
}

Class SinPenalidad{
    +validarExclusividad(): void
    +validarMultiplicador(): void
}

LectorDePreguntas..> CreadorDePreguntas
CreadorDePreguntas ..> Pregunta
Pregunta "1" *-- "2" Opciones
Respuesta o-left- Opciones
ConPenalidad -up-|> Penalidad
SinPenalidad -up-|> Penalidad
Pregunta o-- Penalidad
@enduml