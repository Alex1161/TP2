@startuml
hide circle
skinparam classAttributeIconSize 0

'Clases
Class Opciones{
    -opciones: Collection<String>
    +compararConOrden(opciones: Opciones): boolean
    +compararSinOrden(opciones: Opciones): boolean
    +contiene(opciones: Opciones): boolean
    +esta(opcion: String): boolean
}

Class Pregunta{
    -enunciado: String
    -tipo: String
    -penalidad: Penalidad
    +agregarComodin(comodin: Comodin, respuesta: Respuesta): void
    +calificar(Respuestas: List<Respuesta>): void
    +agregarComodin(comodin: Comodin, respuesta: Respuesta): void
}

Class Respuesta{
    -opcionesElegidas: Opciones
    -puntajeObtenido: Puntaje
    +agregarOpcion(opcion: String):void
    +aplicarComodin(comodin: Comodin): void
    +aplicarPuntaje(): void
    +vs(respuesta: Respuesta): void
}

Class Jugador{
    -nombre: String
    +{Static}Jugador(nombre: String)
    +agregarPuntaje(puntaje: Puntaje): void
    +puntajeValorNumerico(): int
    +sacarComodin(comodin : Comodin):void
}

abstract Puntaje{
    +{abstract}agregar(puntaje: Puntaje): IPunteable
    +{abstract}valor(): int
    +multiplicarPor(factor: int):Puntaje
}

Abstract Class Comodin{
    +{abstract}aplicar(puntaje: Puntaje): Puntaje
    +{abstract}aplicar(respuesta: List<Respuesta>): void
    +{abstract}validar(penalidad: Penalidad): void
    +equals(obj: Object): boolean
}

Abstract Calificador{
    +{static}Calificador(calificador: Calificador)
    +calificar(correctas: Opciones, elegidas: Opciones): Puntaje
}
'Relaciones
Respuesta o-- Jugador
Respuesta *-up- Opciones
Respuesta o-right- Comodin

Pregunta "1" *-left- "2" Opciones
Pregunta "1" o-- "1..2" Comodin
Pregunta o-up- Calificador

Jugador *-right- Puntaje

Jugador "1" *-up- "4" Comodin

@enduml