@startuml
hide circle
skinparam classAttributeIconSize 0

'Clases
Class Opciones{
    -opciones: Collection<String>
    +agregarOpcion(opcion: String): void
    +obtenerOpciones(): Collection<String>
    +compararConOrden(opciones: Opciones): boolean
    +compararSinOrden(opciones: Opciones): boolean
    +esta(opcion: String): boolean
}

Abstract Class Pregunta{
    -enunciado: String
    -opcionesCorrectas: Opciones
    -opcionesPosibles: Opciones
    -tipoPenalidad: Penalidad
    -exclusividades: List<Exclusividad>
    +{abstract}{static}Pregunta(enunciado: String)
    +asignarOpcionesCorrectas(opcionesCorrectas: Opciones): void
    +asignarOpcionesPosibles(opcionesPosibles: Opciones): void
    +esCorrecta(Opcion: String): boolean
    +calificar(Respuestas: List<Respuesta>): void
}

Class Respuesta{
    -opcionesElegidas: Opciones
    -puntajeObtenido: Puntaje
    -multiplicador: Multiplicador
    +{static}Respuesta(jugador: Jugador)
    +{static}Respuesta(jugador: Jugador, multiplicador: Multiplicador)
    +agregarOpcion(opcion: String): void
    +agregarPuntajeObtenido(puntaje:Puntaje):void
    +aplicarPuntaje(): void
}

Class Jugador{
    -nombre: String
    +{Static}Jugador(nombre: String)
    +modificarPuntaje(puntaje: puntaje): void
    +obtenerPuntaje(): int
}

Interface IPunteable{
    +{abstract}agregar(puntaje: IPunteable): IPunteable
    +{abstract}valor(): int
}

Abstract Calificador{
    -calificador: Calificador
    +{static}Calificador(calificador: Calificador)
    +calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Class ComparadorSinOrden{
    +{static}ComparadorConOrden(calificador: Calificador)
    +calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Class ComparadorConOrden{
    +{static}ComparadorSinOrden(calificador: Calificador)
    +calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Class ComparadorParcial{
    +{static}ComparadorParcial(calificador: Calificador)
    +calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Class AsignadorClasico{
    +{static}AsignadorClasico(calificador: Calificador)
    +calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Class AsignadorPenalizado{
    +{static}AsignadorPenalizado(calificador: Calificador)
    +calificar(opcionesCorrectas: Opciones, opcionesElegidas: Opciones): Puntaje
}

Class Multiplicador{
    -factor: int
    +{static}Multiplicador(factor: int)
}

'Relaciones
Respuesta o-- Jugador
Pregunta *-left- Opciones
Respuesta *-up- Opciones

Jugador *-- IPunteable

Pregunta o-right- Calificador
ComparadorConOrden -up-|> Calificador
ComparadorSinOrden -up-|> Calificador
ComparadorParcial -left-|> Calificador
AsignadorClasico --|> Calificador
AsignadorPenalizado --|> Calificador

Jugador "1" *-left- "2" Multiplicador
@enduml