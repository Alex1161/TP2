@startuml
hide circle
skinparam classAttributeIconSize 0

'Clases
Class Opciones{
    -opciones: Collection<String>
    +agregarOpcion(opcion: String): void
    +obtenerOpciones(): Collection<String>
    +compararConOrden(opciones: Opciones): boolean
    +compararSinOrden(opciones: Opciones): boolean
    +esta(opcion: String): boolean
}

Abstract Class Pregunta{
    -enunciado: String
    -tipoPenalidad: Penalidad
    -calificador: Calificador
    +esCorrecta(Opcion: String): boolean
    +calificar(Respuestas: List<Respuesta>): void
    +asignarComodin(comodin: Comodin): void
}

Class Respuesta{
    -opcionesElegidas: Opciones
    -puntajeObtenido: Puntaje
    +{static}Respuesta(jugador: Jugador)
    +{static}Respuesta(jugador: Jugador, multiplicador: Multiplicador)
    +agregarOpcion(opcion: String): void
    +agregarPuntajeObtenido(puntaje:Puntaje):void
    +aplicarComodin(): void
    +aplicarPuntaje(): void
}

Class Jugador{
    -nombre: String
    +{Static}Jugador(nombre: String)
    +modificarPuntaje(puntaje: puntaje): void
    +puntajeValorNumerico(): int
    +removerComodin(): Comodin
}

Interface Puntaje{
    +{abstract}agregar(puntaje: IPunteable): IPunteable
    +{abstract}valor(): int
}

Abstract Multiplicador{
    -factor: int
    +{static}Multiplicador(factor: int)
    -aplicar(puntaje: Puntaje): Puntaje
}

Interface Comodin{
    -aplicar(puntaje: Puntaje): Puntaje
}

Class Exclusividad{
    -aplicar(puntaje: Puntaje): Puntaje
}

Class MultiplicadorX2{
    -aplicar(puntaje: Puntaje): Puntaje
}

Class MultiplicadorX3{
    -aplicar(puntaje: Puntaje): Puntaje
}

'Relaciones
Respuesta o-- Jugador
Pregunta "1" *-left- "2" Opciones
Pregunta "1" *-- "2" Comodin
Respuesta *-up- Opciones
Respuesta *-- Comodin

Jugador *-- Puntaje

Jugador "1" *-right- "4" Comodin
Multiplicador -up-|> Comodin
Exclusividad -up-|> Comodin
MultiplicadorX2 -up-|> Multiplicador
MultiplicadorX3 -up-|> Multiplicador

@enduml