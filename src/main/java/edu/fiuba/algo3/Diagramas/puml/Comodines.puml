@startuml
hide circle
skinparam classAttributeIconSize 0

'Clases
Class Opciones{
    -opciones: Collection<String>
    +compararConOrden(opciones: Opciones): boolean
    +compararSinOrden(opciones: Opciones): boolean
    +contiene(opciones: Opciones): boolean
    +esta(opcion: String): boolean
}

Abstract Class Pregunta{
    -enunciado: String
    -calificador: Calificador
    +sonCorrectas(Opciones: Opciones): boolean
    +calificar(Respuestas: List<Respuesta>): void
    +agregarComodin(comodin: Comodin, respuesta: Respuesta): void
}

Class Respuesta{
    -opcionesElegidas: Opciones
    -puntajeObtenido: Puntaje
    +aplicarComodin(comodin: Comodin): void
    +aplicarPuntaje(): void
    +vs(respuesta: Respuesta): void
    +calificacionValorNumerico(): int
}

Class Jugador{
    -nombre: String
    +{Static}Jugador(nombre: String)
    +modificarPuntaje(puntaje: puntaje): void
    +puntajeValorNumerico(): int
    +removerComodin(): Comodin
}

Interface Puntaje{
    +{abstract}agregar(puntaje: IPunteable): IPunteable
    +{abstract}valor(): int
}

Abstract Multiplicador{
    -factor: int
    +aplicar(puntaje: Puntaje): Puntaje
    +aplicar(respuesta: List<Respuesta>): void
    +validar(penalidad: Penalidad): void
}

Abstract Class Comodin{
    +{abstract}aplicar(puntaje: Puntaje): Puntaje
    +{abstract}aplicar(respuesta: List<Respuesta>): void
    +{abstract}validar(penalidad: Penalidad): void
    +equals(obj: Object): boolean
}

Class ComodinVacio{
    +aplicar(puntaje: Puntaje): Puntaje
    +aplicar(respuesta: List<Respuesta>): void
    +validar(penalidad: Penalidad): void
}

Class Exclusividad{
    +aplicar(puntaje: Puntaje): Puntaje
    +aplicar(respuesta: List<Respuesta>): void
    +validar(penalidad: Penalidad): void
}

Class MultiplicadorX2{
    -aplicar(puntaje: Puntaje): Puntaje
}

Class MultiplicadorX3{
    -aplicar(puntaje: Puntaje): Puntaje
}

Abstract Class Penalidad{
    +validar(comodin: Comodin): void
    +{abstract}validarExclusividad(): void
    +{abstract}validarMultiplicador(): void
}

Class ConPenalidad{
    +validarExclusividad(): void
    +validarMultiplicador(): void
}

Class SinPenalidad{
    +validarExclusividad(): void
    +validarMultiplicador(): void
}

'Relaciones
Respuesta o-- Jugador
Respuesta *-up- Opciones
Respuesta o-- Comodin

Pregunta "1" *-left- "2" Opciones
Pregunta "1" o-- "1..2" Comodin
Pregunta o-right- Penalidad

ConPenalidad --|> Penalidad
SinPenalidad --|> Penalidad

Jugador *-- Puntaje

Jugador "1" *-right- "4" Comodin
Multiplicador -up-|> Comodin
Exclusividad -up-|> Comodin
MultiplicadorX2 -up-|> Multiplicador
MultiplicadorX3 -up-|> Multiplicador
ComodinVacio -left-|> Comodin

@enduml